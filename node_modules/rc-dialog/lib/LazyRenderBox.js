"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _createSuper2 = _interopRequireDefault(require("@babel/runtime/helpers/createSuper"));

var React = _interopRequireWildcard(require("react"));

var LazyRenderBox = /*#__PURE__*/function (_React$Component) {
  (0, _inherits2.default)(LazyRenderBox, _React$Component);

  var _super = (0, _createSuper2.default)(LazyRenderBox);

  function LazyRenderBox() {
    (0, _classCallCheck2.default)(this, LazyRenderBox);
    return _super.apply(this, arguments);
  }

  (0, _createClass2.default)(LazyRenderBox, [{
    key: "shouldComponentUpdate",
    value: function shouldComponentUpdate(nextProps) {
      if (nextProps.forceRender) {
        return true;
      }

      return !!nextProps.hiddenClassName || !!nextProps.visible;
    }
  }, {
    key: "render",
    value: function render() {
      var _this$props = this.props,
          className = _this$props.className,
          hiddenClassName = _this$props.hiddenClassName,
          visible = _this$props.visible,
          forceRender = _this$props.forceRender,
          restProps = (0, _objectWithoutProperties2.default)(_this$props, ["className", "hiddenClassName", "visible", "forceRender"]);
      var useClassName = className;

      if (!!hiddenClassName && !visible) {
        useClassName += " ".concat(hiddenClassName);
      }

      return React.createElement("div", Object.assign({}, restProps, {
        className: useClassName
      }));
    }
  }]);
  return LazyRenderBox;
}(React.Component);

exports.default = LazyRenderBox;