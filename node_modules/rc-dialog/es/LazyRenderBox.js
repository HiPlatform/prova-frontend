import _objectWithoutProperties from "@babel/runtime/helpers/esm/objectWithoutProperties";
import _classCallCheck from "@babel/runtime/helpers/esm/classCallCheck";
import _createClass from "@babel/runtime/helpers/esm/createClass";
import _inherits from "@babel/runtime/helpers/esm/inherits";
import _createSuper from "@babel/runtime/helpers/esm/createSuper";
import * as React from 'react';

var LazyRenderBox = /*#__PURE__*/function (_React$Component) {
  _inherits(LazyRenderBox, _React$Component);

  var _super = _createSuper(LazyRenderBox);

  function LazyRenderBox() {
    _classCallCheck(this, LazyRenderBox);

    return _super.apply(this, arguments);
  }

  _createClass(LazyRenderBox, [{
    key: "shouldComponentUpdate",
    value: function shouldComponentUpdate(nextProps) {
      if (nextProps.forceRender) {
        return true;
      }

      return !!nextProps.hiddenClassName || !!nextProps.visible;
    }
  }, {
    key: "render",
    value: function render() {
      var _this$props = this.props,
          className = _this$props.className,
          hiddenClassName = _this$props.hiddenClassName,
          visible = _this$props.visible,
          forceRender = _this$props.forceRender,
          restProps = _objectWithoutProperties(_this$props, ["className", "hiddenClassName", "visible", "forceRender"]);

      var useClassName = className;

      if (!!hiddenClassName && !visible) {
        useClassName += " ".concat(hiddenClassName);
      }

      return React.createElement("div", Object.assign({}, restProps, {
        className: useClassName
      }));
    }
  }]);

  return LazyRenderBox;
}(React.Component);

export { LazyRenderBox as default };