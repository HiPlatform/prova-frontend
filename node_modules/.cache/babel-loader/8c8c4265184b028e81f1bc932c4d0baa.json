{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport * as React from 'react';\nimport RcTree, { TreeNode } from 'rc-tree';\nimport classNames from 'classnames';\nimport DirectoryTree from './DirectoryTree';\nimport { ConfigContext } from '../config-provider';\nimport collapseMotion from '../_util/motion';\nimport renderSwitcherIcon from './utils/iconUtil';\nvar Tree = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _classNames;\n\n  var _React$useContext = React.useContext(ConfigContext),\n      getPrefixCls = _React$useContext.getPrefixCls,\n      direction = _React$useContext.direction,\n      virtual = _React$useContext.virtual;\n\n  var customizePrefixCls = props.prefixCls,\n      className = props.className,\n      showIcon = props.showIcon,\n      showLine = props.showLine,\n      _switcherIcon = props.switcherIcon,\n      blockNode = props.blockNode,\n      children = props.children,\n      checkable = props.checkable;\n\n  var newProps = _extends(_extends({}, props), {\n    showLine: Boolean(showLine)\n  });\n\n  var prefixCls = getPrefixCls('tree', customizePrefixCls);\n  return /*#__PURE__*/React.createElement(RcTree, _extends({\n    itemHeight: 20,\n    ref: ref,\n    virtual: virtual\n  }, newProps, {\n    prefixCls: prefixCls,\n    className: classNames((_classNames = {}, _defineProperty(_classNames, \"\".concat(prefixCls, \"-icon-hide\"), !showIcon), _defineProperty(_classNames, \"\".concat(prefixCls, \"-block-node\"), blockNode), _defineProperty(_classNames, \"\".concat(prefixCls, \"-rtl\"), direction === 'rtl'), _classNames), className),\n    checkable: checkable ? /*#__PURE__*/React.createElement(\"span\", {\n      className: \"\".concat(prefixCls, \"-checkbox-inner\")\n    }) : checkable,\n    switcherIcon: function switcherIcon(nodeProps) {\n      return renderSwitcherIcon(prefixCls, _switcherIcon, showLine, nodeProps);\n    }\n  }), children);\n});\nTree.TreeNode = TreeNode;\nTree.DirectoryTree = DirectoryTree;\nTree.defaultProps = {\n  checkable: false,\n  showIcon: false,\n  motion: _extends(_extends({}, collapseMotion), {\n    motionAppear: false\n  }),\n  blockNode: false\n};\nexport default Tree;","map":{"version":3,"sources":["/home/diegozago/Documents/hi-platform-test/node_modules/antd/es/tree/Tree.js"],"names":["_defineProperty","_extends","React","RcTree","TreeNode","classNames","DirectoryTree","ConfigContext","collapseMotion","renderSwitcherIcon","Tree","forwardRef","props","ref","_classNames","_React$useContext","useContext","getPrefixCls","direction","virtual","customizePrefixCls","prefixCls","className","showIcon","showLine","_switcherIcon","switcherIcon","blockNode","children","checkable","newProps","Boolean","createElement","itemHeight","concat","nodeProps","defaultProps","motion","motionAppear"],"mappings":"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","sourcesContent":["import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport * as React from 'react';\nimport RcTree, { TreeNode } from 'rc-tree';\nimport classNames from 'classnames';\nimport DirectoryTree from './DirectoryTree';\nimport { ConfigContext } from '../config-provider';\nimport collapseMotion from '../_util/motion';\nimport renderSwitcherIcon from './utils/iconUtil';\nvar Tree = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _classNames;\n\n  var _React$useContext = React.useContext(ConfigContext),\n      getPrefixCls = _React$useContext.getPrefixCls,\n      direction = _React$useContext.direction,\n      virtual = _React$useContext.virtual;\n\n  var customizePrefixCls = props.prefixCls,\n      className = props.className,\n      showIcon = props.showIcon,\n      showLine = props.showLine,\n      _switcherIcon = props.switcherIcon,\n      blockNode = props.blockNode,\n      children = props.children,\n      checkable = props.checkable;\n\n  var newProps = _extends(_extends({}, props), {\n    showLine: Boolean(showLine)\n  });\n\n  var prefixCls = getPrefixCls('tree', customizePrefixCls);\n  return /*#__PURE__*/React.createElement(RcTree, _extends({\n    itemHeight: 20,\n    ref: ref,\n    virtual: virtual\n  }, newProps, {\n    prefixCls: prefixCls,\n    className: classNames((_classNames = {}, _defineProperty(_classNames, \"\".concat(prefixCls, \"-icon-hide\"), !showIcon), _defineProperty(_classNames, \"\".concat(prefixCls, \"-block-node\"), blockNode), _defineProperty(_classNames, \"\".concat(prefixCls, \"-rtl\"), direction === 'rtl'), _classNames), className),\n    checkable: checkable ? /*#__PURE__*/React.createElement(\"span\", {\n      className: \"\".concat(prefixCls, \"-checkbox-inner\")\n    }) : checkable,\n    switcherIcon: function switcherIcon(nodeProps) {\n      return renderSwitcherIcon(prefixCls, _switcherIcon, showLine, nodeProps);\n    }\n  }), children);\n});\nTree.TreeNode = TreeNode;\nTree.DirectoryTree = DirectoryTree;\nTree.defaultProps = {\n  checkable: false,\n  showIcon: false,\n  motion: _extends(_extends({}, collapseMotion), {\n    motionAppear: false\n  }),\n  blockNode: false\n};\nexport default Tree;"]},"metadata":{},"sourceType":"module"}