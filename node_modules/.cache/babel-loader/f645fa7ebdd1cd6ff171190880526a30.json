{"ast":null,"code":"var _jsxFileName = \"/home/diegozago/Documents/hi-platform-test/src/components/TreeList/TreeList.js\";\nimport React, { useState } from 'react';\nimport TreeItem from '../TreeItem/TreeItem';\nimport './TreeList.scss';\n\nconst List = ({\n  children\n}) => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: `list-container`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 5\n    }\n  }, children);\n};\n\nconst TreeList = ({\n  data\n}) => {\n  const [collapsed, setCollapsed] = useState(false);\n\n  const toggleCollapse = () => setCollapsed(val => !val);\n\n  const handleCheck = e => console.log('check');\n\n  const renderList = (item, i) => {\n    const children = Object.values(item.children);\n\n    if (!!children.length) {\n      return /*#__PURE__*/React.createElement(List, {\n        key: item.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 9\n        }\n      }, children.map(renderList));\n    } else {\n      return /*#__PURE__*/React.createElement(TreeItem, {\n        key: item.id,\n        item: item,\n        index: i,\n        checked: item.checked,\n        setChecked: handleCheck,\n        collapsed: collapsed,\n        toggleCollapse: toggleCollapse,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 9\n        }\n      });\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"app\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(List, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, data.map(renderList)));\n};\n\nexport default TreeList;","map":{"version":3,"sources":["/home/diegozago/Documents/hi-platform-test/src/components/TreeList/TreeList.js"],"names":["React","useState","TreeItem","List","children","TreeList","data","collapsed","setCollapsed","toggleCollapse","val","handleCheck","e","console","log","renderList","item","i","Object","values","length","id","map","checked"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAOC,QAAP,MAAqB,sBAArB;AAEA,OAAO,iBAAP;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAC7B,sBACE;AAAK,IAAA,SAAS,EAAG,gBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,QADH,CADF;AAKD,CAND;;AAQA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AAC7B,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC,KAAD,CAA1C;;AAEA,QAAMQ,cAAc,GAAG,MAAMD,YAAY,CAAEE,GAAD,IAAS,CAACA,GAAX,CAAzC;;AACA,QAAMC,WAAW,GAAIC,CAAD,IAAOC,OAAO,CAACC,GAAR,CAAY,OAAZ,CAA3B;;AAEA,QAAMC,UAAU,GAAG,CAACC,IAAD,EAAOC,CAAP,KAAa;AAC9B,UAAMb,QAAQ,GAAGc,MAAM,CAACC,MAAP,CAAcH,IAAI,CAACZ,QAAnB,CAAjB;;AAEA,QAAI,CAAC,CAACA,QAAQ,CAACgB,MAAf,EAAuB;AACrB,0BACE,oBAAC,IAAD;AAAM,QAAA,GAAG,EAAEJ,IAAI,CAACK,EAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGjB,QAAQ,CAACkB,GAAT,CAAaP,UAAb,CADH,CADF;AAKD,KAND,MAMO;AACL,0BACE,oBAAC,QAAD;AACE,QAAA,GAAG,EAAEC,IAAI,CAACK,EADZ;AAEE,QAAA,IAAI,EAAEL,IAFR;AAGE,QAAA,KAAK,EAAEC,CAHT;AAIE,QAAA,OAAO,EAAED,IAAI,CAACO,OAJhB;AAKE,QAAA,UAAU,EAAEZ,WALd;AAME,QAAA,SAAS,EAAEJ,SANb;AAOE,QAAA,cAAc,EAAEE,cAPlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAWD;AACF,GAtBD;;AAwBA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEIH,IAAI,CAACgB,GAAL,CAASP,UAAT,CAFJ,CADF,CADF;AASD,CAvCD;;AAyCA,eAAeV,QAAf","sourcesContent":["import React, { useState } from 'react';\n\nimport TreeItem from '../TreeItem/TreeItem';\n\nimport './TreeList.scss';\n\nconst List = ({ children }) => {\n  return (\n    <div className={`list-container`}>\n      {children}\n    </div>\n  )\n}\n\nconst TreeList = ({ data }) => {\n  const [collapsed, setCollapsed] = useState(false)\n\n  const toggleCollapse = () => setCollapsed((val) => !val)\n  const handleCheck = (e) => console.log('check')\n\n  const renderList = (item, i) => {\n    const children = Object.values(item.children)\n    \n    if (!!children.length) {\n      return (\n        <List key={item.id}>\n          {children.map(renderList)}\n        </List>\n      )\n    } else {\n      return (\n        <TreeItem \n          key={item.id}\n          item={item} \n          index={i} \n          checked={item.checked}\n          setChecked={handleCheck}\n          collapsed={collapsed}\n          toggleCollapse={toggleCollapse}\n        />\n      )\n    }\n  }\n  \n  return (\n    <div className=\"app\">\n      <List>\n        {\n          data.map(renderList)\n        }\n      </List>\n    </div>\n  )\n}\n\nexport default TreeList;\n"]},"metadata":{},"sourceType":"module"}