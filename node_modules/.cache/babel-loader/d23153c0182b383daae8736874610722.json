{"ast":null,"code":"import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport * as React from 'react';\nimport useMemo from \"rc-util/es/hooks/useMemo\";\nimport TimeUnitColumn from './TimeUnitColumn';\nimport { leftPad } from '../../utils/miscUtil';\nimport { setTime as utilSetTime } from '../../utils/timeUtil';\n\nfunction shouldUnitsUpdate(prevUnits, nextUnits) {\n  if (prevUnits.length !== nextUnits.length) return true; // if any unit's disabled status is different, the units should be re-evaluted\n\n  for (var i = 0; i < prevUnits.length; i += 1) {\n    if (prevUnits[i].disabled !== nextUnits[i].disabled) return true;\n  }\n\n  return false;\n}\n\nfunction generateUnits(start, end, step, disabledUnits) {\n  var units = [];\n\n  for (var i = start; i <= end; i += step) {\n    units.push({\n      label: leftPad(i, 2),\n      value: i,\n      disabled: (disabledUnits || []).includes(i)\n    });\n  }\n\n  return units;\n}\n\nfunction TimeBody(props) {\n  var generateConfig = props.generateConfig,\n      prefixCls = props.prefixCls,\n      operationRef = props.operationRef,\n      activeColumnIndex = props.activeColumnIndex,\n      value = props.value,\n      showHour = props.showHour,\n      showMinute = props.showMinute,\n      showSecond = props.showSecond,\n      use12Hours = props.use12Hours,\n      _props$hourStep = props.hourStep,\n      hourStep = _props$hourStep === void 0 ? 1 : _props$hourStep,\n      _props$minuteStep = props.minuteStep,\n      minuteStep = _props$minuteStep === void 0 ? 1 : _props$minuteStep,\n      _props$secondStep = props.secondStep,\n      secondStep = _props$secondStep === void 0 ? 1 : _props$secondStep,\n      disabledHours = props.disabledHours,\n      disabledMinutes = props.disabledMinutes,\n      disabledSeconds = props.disabledSeconds,\n      hideDisabledOptions = props.hideDisabledOptions,\n      onSelect = props.onSelect;\n  var columns = [];\n  var contentPrefixCls = \"\".concat(prefixCls, \"-content\");\n  var columnPrefixCls = \"\".concat(prefixCls, \"-time-panel\");\n  var isPM;\n  var hour = value ? generateConfig.getHour(value) : -1;\n  var minute = value ? generateConfig.getMinute(value) : -1;\n  var second = value ? generateConfig.getSecond(value) : -1;\n\n  var setTime = function setTime(isNewPM, newHour, newMinute, newSecond) {\n    var newDate = value || generateConfig.getNow();\n    var mergedHour = Math.max(0, newHour);\n    var mergedMinute = Math.max(0, newMinute);\n    var mergedSecond = Math.max(0, newSecond);\n    newDate = utilSetTime(generateConfig, newDate, !use12Hours || !isNewPM ? mergedHour : mergedHour + 12, mergedMinute, mergedSecond);\n    return newDate;\n  }; // ========================= Unit =========================\n\n\n  var rawHours = generateUnits(0, 23, hourStep, disabledHours && disabledHours());\n  var memorizedRawHours = useMemo(function () {\n    return rawHours;\n  }, rawHours, shouldUnitsUpdate); // Should additional logic to handle 12 hours\n\n  if (use12Hours) {\n    isPM = hour >= 12; // -1 means should display AM\n\n    hour %= 12;\n  }\n\n  var _React$useMemo = React.useMemo(function () {\n    if (!use12Hours) {\n      return [false, false];\n    }\n\n    var AMPMDisabled = [true, true];\n    memorizedRawHours.forEach(function (_ref) {\n      var disabled = _ref.disabled,\n          hourValue = _ref.value;\n      if (disabled) return;\n\n      if (hourValue >= 12) {\n        AMPMDisabled[1] = false;\n      } else {\n        AMPMDisabled[0] = false;\n      }\n    });\n    return AMPMDisabled;\n  }, [use12Hours, memorizedRawHours]),\n      _React$useMemo2 = _slicedToArray(_React$useMemo, 2),\n      AMDisabled = _React$useMemo2[0],\n      PMDisabled = _React$useMemo2[1];\n\n  var hours = React.useMemo(function () {\n    if (!use12Hours) return memorizedRawHours;\n    return memorizedRawHours.filter(isPM ? function (hourMeta) {\n      return hourMeta.value >= 12;\n    } : function (hourMeta) {\n      return hourMeta.value < 12;\n    }).map(function (hourMeta) {\n      var hourValue = hourMeta.value % 12;\n      var hourLabel = hourValue === 0 ? '12' : leftPad(hourValue, 2);\n      return _objectSpread(_objectSpread({}, hourMeta), {}, {\n        label: hourLabel,\n        value: hourValue\n      });\n    });\n  }, [use12Hours, memorizedRawHours]);\n  var minutes = generateUnits(0, 59, minuteStep, disabledMinutes && disabledMinutes(hour));\n  var seconds = generateUnits(0, 59, secondStep, disabledSeconds && disabledSeconds(hour, minute)); // ====================== Operations ======================\n\n  operationRef.current = {\n    onUpDown: function onUpDown(diff) {\n      var column = columns[activeColumnIndex];\n\n      if (column) {\n        var valueIndex = column.units.findIndex(function (unit) {\n          return unit.value === column.value;\n        });\n        var unitLen = column.units.length;\n\n        for (var i = 1; i < unitLen; i += 1) {\n          var nextUnit = column.units[(valueIndex + diff * i + unitLen) % unitLen];\n\n          if (nextUnit.disabled !== true) {\n            column.onSelect(nextUnit.value);\n            break;\n          }\n        }\n      }\n    }\n  }; // ======================== Render ========================\n\n  function addColumnNode(condition, node, columnValue, units, onColumnSelect) {\n    if (condition !== false) {\n      columns.push({\n        node: React.cloneElement(node, {\n          prefixCls: columnPrefixCls,\n          value: columnValue,\n          active: activeColumnIndex === columns.length,\n          onSelect: onColumnSelect,\n          units: units,\n          hideDisabledOptions: hideDisabledOptions\n        }),\n        onSelect: onColumnSelect,\n        value: columnValue,\n        units: units\n      });\n    }\n  } // Hour\n\n\n  addColumnNode(showHour, React.createElement(TimeUnitColumn, {\n    key: \"hour\"\n  }), hour, hours, function (num) {\n    onSelect(setTime(isPM, num, minute, second), 'mouse');\n  }); // Minute\n\n  addColumnNode(showMinute, React.createElement(TimeUnitColumn, {\n    key: \"minute\"\n  }), minute, minutes, function (num) {\n    onSelect(setTime(isPM, hour, num, second), 'mouse');\n  }); // Second\n\n  addColumnNode(showSecond, React.createElement(TimeUnitColumn, {\n    key: \"second\"\n  }), second, seconds, function (num) {\n    onSelect(setTime(isPM, hour, minute, num), 'mouse');\n  }); // 12 Hours\n\n  var PMIndex = -1;\n\n  if (typeof isPM === 'boolean') {\n    PMIndex = isPM ? 1 : 0;\n  }\n\n  addColumnNode(use12Hours === true, React.createElement(TimeUnitColumn, {\n    key: \"12hours\"\n  }), PMIndex, [{\n    label: 'AM',\n    value: 0,\n    disabled: AMDisabled\n  }, {\n    label: 'PM',\n    value: 1,\n    disabled: PMDisabled\n  }], function (num) {\n    onSelect(setTime(!!num, hour, minute, second), 'mouse');\n  });\n  return React.createElement(\"div\", {\n    className: contentPrefixCls\n  }, columns.map(function (_ref2) {\n    var node = _ref2.node;\n    return node;\n  }));\n}\n\nexport default TimeBody;","map":{"version":3,"sources":["/home/diegozago/Documents/hi-platform-test/node_modules/rc-picker/es/panels/TimePanel/TimeBody.js"],"names":["_objectSpread","_slicedToArray","React","useMemo","TimeUnitColumn","leftPad","setTime","utilSetTime","shouldUnitsUpdate","prevUnits","nextUnits","length","i","disabled","generateUnits","start","end","step","disabledUnits","units","push","label","value","includes","TimeBody","props","generateConfig","prefixCls","operationRef","activeColumnIndex","showHour","showMinute","showSecond","use12Hours","_props$hourStep","hourStep","_props$minuteStep","minuteStep","_props$secondStep","secondStep","disabledHours","disabledMinutes","disabledSeconds","hideDisabledOptions","onSelect","columns","contentPrefixCls","concat","columnPrefixCls","isPM","hour","getHour","minute","getMinute","second","getSecond","isNewPM","newHour","newMinute","newSecond","newDate","getNow","mergedHour","Math","max","mergedMinute","mergedSecond","rawHours","memorizedRawHours","_React$useMemo","AMPMDisabled","forEach","_ref","hourValue","_React$useMemo2","AMDisabled","PMDisabled","hours","filter","hourMeta","map","hourLabel","minutes","seconds","current","onUpDown","diff","column","valueIndex","findIndex","unit","unitLen","nextUnit","addColumnNode","condition","node","columnValue","onColumnSelect","cloneElement","active","createElement","key","num","PMIndex","className","_ref2"],"mappings":"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","sourcesContent":["import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport * as React from 'react';\nimport useMemo from \"rc-util/es/hooks/useMemo\";\nimport TimeUnitColumn from './TimeUnitColumn';\nimport { leftPad } from '../../utils/miscUtil';\nimport { setTime as utilSetTime } from '../../utils/timeUtil';\n\nfunction shouldUnitsUpdate(prevUnits, nextUnits) {\n  if (prevUnits.length !== nextUnits.length) return true; // if any unit's disabled status is different, the units should be re-evaluted\n\n  for (var i = 0; i < prevUnits.length; i += 1) {\n    if (prevUnits[i].disabled !== nextUnits[i].disabled) return true;\n  }\n\n  return false;\n}\n\nfunction generateUnits(start, end, step, disabledUnits) {\n  var units = [];\n\n  for (var i = start; i <= end; i += step) {\n    units.push({\n      label: leftPad(i, 2),\n      value: i,\n      disabled: (disabledUnits || []).includes(i)\n    });\n  }\n\n  return units;\n}\n\nfunction TimeBody(props) {\n  var generateConfig = props.generateConfig,\n      prefixCls = props.prefixCls,\n      operationRef = props.operationRef,\n      activeColumnIndex = props.activeColumnIndex,\n      value = props.value,\n      showHour = props.showHour,\n      showMinute = props.showMinute,\n      showSecond = props.showSecond,\n      use12Hours = props.use12Hours,\n      _props$hourStep = props.hourStep,\n      hourStep = _props$hourStep === void 0 ? 1 : _props$hourStep,\n      _props$minuteStep = props.minuteStep,\n      minuteStep = _props$minuteStep === void 0 ? 1 : _props$minuteStep,\n      _props$secondStep = props.secondStep,\n      secondStep = _props$secondStep === void 0 ? 1 : _props$secondStep,\n      disabledHours = props.disabledHours,\n      disabledMinutes = props.disabledMinutes,\n      disabledSeconds = props.disabledSeconds,\n      hideDisabledOptions = props.hideDisabledOptions,\n      onSelect = props.onSelect;\n  var columns = [];\n  var contentPrefixCls = \"\".concat(prefixCls, \"-content\");\n  var columnPrefixCls = \"\".concat(prefixCls, \"-time-panel\");\n  var isPM;\n  var hour = value ? generateConfig.getHour(value) : -1;\n  var minute = value ? generateConfig.getMinute(value) : -1;\n  var second = value ? generateConfig.getSecond(value) : -1;\n\n  var setTime = function setTime(isNewPM, newHour, newMinute, newSecond) {\n    var newDate = value || generateConfig.getNow();\n    var mergedHour = Math.max(0, newHour);\n    var mergedMinute = Math.max(0, newMinute);\n    var mergedSecond = Math.max(0, newSecond);\n    newDate = utilSetTime(generateConfig, newDate, !use12Hours || !isNewPM ? mergedHour : mergedHour + 12, mergedMinute, mergedSecond);\n    return newDate;\n  }; // ========================= Unit =========================\n\n\n  var rawHours = generateUnits(0, 23, hourStep, disabledHours && disabledHours());\n  var memorizedRawHours = useMemo(function () {\n    return rawHours;\n  }, rawHours, shouldUnitsUpdate); // Should additional logic to handle 12 hours\n\n  if (use12Hours) {\n    isPM = hour >= 12; // -1 means should display AM\n\n    hour %= 12;\n  }\n\n  var _React$useMemo = React.useMemo(function () {\n    if (!use12Hours) {\n      return [false, false];\n    }\n\n    var AMPMDisabled = [true, true];\n    memorizedRawHours.forEach(function (_ref) {\n      var disabled = _ref.disabled,\n          hourValue = _ref.value;\n      if (disabled) return;\n\n      if (hourValue >= 12) {\n        AMPMDisabled[1] = false;\n      } else {\n        AMPMDisabled[0] = false;\n      }\n    });\n    return AMPMDisabled;\n  }, [use12Hours, memorizedRawHours]),\n      _React$useMemo2 = _slicedToArray(_React$useMemo, 2),\n      AMDisabled = _React$useMemo2[0],\n      PMDisabled = _React$useMemo2[1];\n\n  var hours = React.useMemo(function () {\n    if (!use12Hours) return memorizedRawHours;\n    return memorizedRawHours.filter(isPM ? function (hourMeta) {\n      return hourMeta.value >= 12;\n    } : function (hourMeta) {\n      return hourMeta.value < 12;\n    }).map(function (hourMeta) {\n      var hourValue = hourMeta.value % 12;\n      var hourLabel = hourValue === 0 ? '12' : leftPad(hourValue, 2);\n      return _objectSpread(_objectSpread({}, hourMeta), {}, {\n        label: hourLabel,\n        value: hourValue\n      });\n    });\n  }, [use12Hours, memorizedRawHours]);\n  var minutes = generateUnits(0, 59, minuteStep, disabledMinutes && disabledMinutes(hour));\n  var seconds = generateUnits(0, 59, secondStep, disabledSeconds && disabledSeconds(hour, minute)); // ====================== Operations ======================\n\n  operationRef.current = {\n    onUpDown: function onUpDown(diff) {\n      var column = columns[activeColumnIndex];\n\n      if (column) {\n        var valueIndex = column.units.findIndex(function (unit) {\n          return unit.value === column.value;\n        });\n        var unitLen = column.units.length;\n\n        for (var i = 1; i < unitLen; i += 1) {\n          var nextUnit = column.units[(valueIndex + diff * i + unitLen) % unitLen];\n\n          if (nextUnit.disabled !== true) {\n            column.onSelect(nextUnit.value);\n            break;\n          }\n        }\n      }\n    }\n  }; // ======================== Render ========================\n\n  function addColumnNode(condition, node, columnValue, units, onColumnSelect) {\n    if (condition !== false) {\n      columns.push({\n        node: React.cloneElement(node, {\n          prefixCls: columnPrefixCls,\n          value: columnValue,\n          active: activeColumnIndex === columns.length,\n          onSelect: onColumnSelect,\n          units: units,\n          hideDisabledOptions: hideDisabledOptions\n        }),\n        onSelect: onColumnSelect,\n        value: columnValue,\n        units: units\n      });\n    }\n  } // Hour\n\n\n  addColumnNode(showHour, React.createElement(TimeUnitColumn, {\n    key: \"hour\"\n  }), hour, hours, function (num) {\n    onSelect(setTime(isPM, num, minute, second), 'mouse');\n  }); // Minute\n\n  addColumnNode(showMinute, React.createElement(TimeUnitColumn, {\n    key: \"minute\"\n  }), minute, minutes, function (num) {\n    onSelect(setTime(isPM, hour, num, second), 'mouse');\n  }); // Second\n\n  addColumnNode(showSecond, React.createElement(TimeUnitColumn, {\n    key: \"second\"\n  }), second, seconds, function (num) {\n    onSelect(setTime(isPM, hour, minute, num), 'mouse');\n  }); // 12 Hours\n\n  var PMIndex = -1;\n\n  if (typeof isPM === 'boolean') {\n    PMIndex = isPM ? 1 : 0;\n  }\n\n  addColumnNode(use12Hours === true, React.createElement(TimeUnitColumn, {\n    key: \"12hours\"\n  }), PMIndex, [{\n    label: 'AM',\n    value: 0,\n    disabled: AMDisabled\n  }, {\n    label: 'PM',\n    value: 1,\n    disabled: PMDisabled\n  }], function (num) {\n    onSelect(setTime(!!num, hour, minute, second), 'mouse');\n  });\n  return React.createElement(\"div\", {\n    className: contentPrefixCls\n  }, columns.map(function (_ref2) {\n    var node = _ref2.node;\n    return node;\n  }));\n}\n\nexport default TimeBody;"]},"metadata":{},"sourceType":"module"}