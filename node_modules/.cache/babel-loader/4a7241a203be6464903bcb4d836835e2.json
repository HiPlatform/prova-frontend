{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { supportRef } from \"rc-util/es/ref\";\nimport { getPathValue } from '../utils/valueUtil';\n\nfunction isRenderCell(data) {\n  return data && _typeof(data) === 'object' && !Array.isArray(data) && !React.isValidElement(data);\n}\n\nfunction isRefComponent(component) {\n  // String tag component also support ref\n  if (typeof component === 'string') {\n    return true;\n  }\n\n  return supportRef(component);\n}\n\nfunction Cell(_ref, ref) {\n  var _classNames;\n\n  var prefixCls = _ref.prefixCls,\n      className = _ref.className,\n      record = _ref.record,\n      index = _ref.index,\n      dataIndex = _ref.dataIndex,\n      render = _ref.render,\n      children = _ref.children,\n      _ref$component = _ref.component,\n      Component = _ref$component === void 0 ? 'td' : _ref$component,\n      colSpan = _ref.colSpan,\n      rowSpan = _ref.rowSpan,\n      fixLeft = _ref.fixLeft,\n      fixRight = _ref.fixRight,\n      firstFixLeft = _ref.firstFixLeft,\n      lastFixLeft = _ref.lastFixLeft,\n      firstFixRight = _ref.firstFixRight,\n      lastFixRight = _ref.lastFixRight,\n      appendNode = _ref.appendNode,\n      _ref$additionalProps = _ref.additionalProps,\n      additionalProps = _ref$additionalProps === void 0 ? {} : _ref$additionalProps,\n      ellipsis = _ref.ellipsis,\n      align = _ref.align,\n      rowType = _ref.rowType,\n      isSticky = _ref.isSticky;\n  var cellPrefixCls = \"\".concat(prefixCls, \"-cell\"); // ==================== Child Node ====================\n\n  var cellProps;\n  var childNode;\n\n  if (children) {\n    childNode = children;\n  } else {\n    var value = getPathValue(record, dataIndex); // Customize render node\n\n    childNode = value;\n\n    if (render) {\n      var renderData = render(value, record, index);\n\n      if (isRenderCell(renderData)) {\n        childNode = renderData.children;\n        cellProps = renderData.props;\n      } else {\n        childNode = renderData;\n      }\n    }\n  } // Not crash if final `childNode` is not validate ReactNode\n\n\n  if (_typeof(childNode) === 'object' && !Array.isArray(childNode) && !React.isValidElement(childNode)) {\n    childNode = null;\n  }\n\n  if (ellipsis && (lastFixLeft || firstFixRight)) {\n    childNode = React.createElement(\"span\", {\n      className: \"\".concat(cellPrefixCls, \"-content\")\n    }, childNode);\n  }\n\n  var _ref2 = cellProps || {},\n      cellColSpan = _ref2.colSpan,\n      cellRowSpan = _ref2.rowSpan,\n      cellStyle = _ref2.style,\n      cellClassName = _ref2.className,\n      restCellProps = _objectWithoutProperties(_ref2, [\"colSpan\", \"rowSpan\", \"style\", \"className\"]);\n\n  var mergedColSpan = cellColSpan !== undefined ? cellColSpan : colSpan;\n  var mergedRowSpan = cellRowSpan !== undefined ? cellRowSpan : rowSpan;\n\n  if (mergedColSpan === 0 || mergedRowSpan === 0) {\n    return null;\n  } // ====================== Fixed =======================\n\n\n  var fixedStyle = {};\n  var isFixLeft = typeof fixLeft === 'number';\n  var isFixRight = typeof fixRight === 'number';\n\n  if (isFixLeft) {\n    fixedStyle.position = 'sticky';\n    fixedStyle.left = fixLeft;\n  }\n\n  if (isFixRight) {\n    fixedStyle.position = 'sticky';\n    fixedStyle.right = fixRight;\n  } // ====================== Align =======================\n\n\n  var alignStyle = {};\n\n  if (align) {\n    alignStyle.textAlign = align;\n  } // ====================== Render ======================\n\n\n  var title;\n  var ellipsisConfig = ellipsis === true ? {\n    showTitle: true\n  } : ellipsis;\n\n  if (ellipsisConfig && (ellipsisConfig.showTitle || rowType === 'header')) {\n    if (typeof childNode === 'string' || typeof childNode === 'number') {\n      title = childNode.toString();\n    } else if (React.isValidElement(childNode) && typeof childNode.props.children === 'string') {\n      title = childNode.props.children;\n    }\n  }\n\n  var componentProps = _objectSpread(_objectSpread(_objectSpread({\n    title: title\n  }, restCellProps), additionalProps), {}, {\n    colSpan: mergedColSpan && mergedColSpan !== 1 ? mergedColSpan : null,\n    rowSpan: mergedRowSpan && mergedRowSpan !== 1 ? mergedRowSpan : null,\n    className: classNames(cellPrefixCls, className, (_classNames = {}, _defineProperty(_classNames, \"\".concat(cellPrefixCls, \"-fix-left\"), isFixLeft), _defineProperty(_classNames, \"\".concat(cellPrefixCls, \"-fix-left-first\"), firstFixLeft), _defineProperty(_classNames, \"\".concat(cellPrefixCls, \"-fix-left-last\"), lastFixLeft), _defineProperty(_classNames, \"\".concat(cellPrefixCls, \"-fix-right\"), isFixRight), _defineProperty(_classNames, \"\".concat(cellPrefixCls, \"-fix-right-first\"), firstFixRight), _defineProperty(_classNames, \"\".concat(cellPrefixCls, \"-fix-right-last\"), lastFixRight), _defineProperty(_classNames, \"\".concat(cellPrefixCls, \"-ellipsis\"), ellipsis), _defineProperty(_classNames, \"\".concat(cellPrefixCls, \"-with-append\"), appendNode), _defineProperty(_classNames, \"\".concat(cellPrefixCls, \"-fix-sticky\"), (isFixLeft || isFixRight) && isSticky), _classNames), additionalProps.className, cellClassName),\n    style: _objectSpread(_objectSpread(_objectSpread(_objectSpread({}, additionalProps.style), alignStyle), fixedStyle), cellStyle),\n    ref: isRefComponent(Component) ? ref : null\n  });\n\n  return React.createElement(Component, Object.assign({}, componentProps), appendNode, childNode);\n}\n\nvar RefCell = React.forwardRef(Cell);\nRefCell.displayName = 'Cell';\nvar MemoCell = React.memo(RefCell, function (prev, next) {\n  if (next.shouldCellUpdate) {\n    return !next.shouldCellUpdate(next.record, prev.record);\n  }\n\n  return false;\n});\nexport default MemoCell;","map":{"version":3,"sources":["/home/diegozago/Documents/hi-platform-test/node_modules/rc-table/es/Cell/index.js"],"names":["_defineProperty","_objectSpread","_objectWithoutProperties","_typeof","React","classNames","supportRef","getPathValue","isRenderCell","data","Array","isArray","isValidElement","isRefComponent","component","Cell","_ref","ref","_classNames","prefixCls","className","record","index","dataIndex","render","children","_ref$component","Component","colSpan","rowSpan","fixLeft","fixRight","firstFixLeft","lastFixLeft","firstFixRight","lastFixRight","appendNode","_ref$additionalProps","additionalProps","ellipsis","align","rowType","isSticky","cellPrefixCls","concat","cellProps","childNode","value","renderData","props","createElement","_ref2","cellColSpan","cellRowSpan","cellStyle","style","cellClassName","restCellProps","mergedColSpan","undefined","mergedRowSpan","fixedStyle","isFixLeft","isFixRight","position","left","right","alignStyle","textAlign","title","ellipsisConfig","showTitle","toString","componentProps","Object","assign","RefCell","forwardRef","displayName","MemoCell","memo","prev","next","shouldCellUpdate"],"mappings":"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","sourcesContent":["import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { supportRef } from \"rc-util/es/ref\";\nimport { getPathValue } from '../utils/valueUtil';\n\nfunction isRenderCell(data) {\n  return data && _typeof(data) === 'object' && !Array.isArray(data) && !React.isValidElement(data);\n}\n\nfunction isRefComponent(component) {\n  // String tag component also support ref\n  if (typeof component === 'string') {\n    return true;\n  }\n\n  return supportRef(component);\n}\n\nfunction Cell(_ref, ref) {\n  var _classNames;\n\n  var prefixCls = _ref.prefixCls,\n      className = _ref.className,\n      record = _ref.record,\n      index = _ref.index,\n      dataIndex = _ref.dataIndex,\n      render = _ref.render,\n      children = _ref.children,\n      _ref$component = _ref.component,\n      Component = _ref$component === void 0 ? 'td' : _ref$component,\n      colSpan = _ref.colSpan,\n      rowSpan = _ref.rowSpan,\n      fixLeft = _ref.fixLeft,\n      fixRight = _ref.fixRight,\n      firstFixLeft = _ref.firstFixLeft,\n      lastFixLeft = _ref.lastFixLeft,\n      firstFixRight = _ref.firstFixRight,\n      lastFixRight = _ref.lastFixRight,\n      appendNode = _ref.appendNode,\n      _ref$additionalProps = _ref.additionalProps,\n      additionalProps = _ref$additionalProps === void 0 ? {} : _ref$additionalProps,\n      ellipsis = _ref.ellipsis,\n      align = _ref.align,\n      rowType = _ref.rowType,\n      isSticky = _ref.isSticky;\n  var cellPrefixCls = \"\".concat(prefixCls, \"-cell\"); // ==================== Child Node ====================\n\n  var cellProps;\n  var childNode;\n\n  if (children) {\n    childNode = children;\n  } else {\n    var value = getPathValue(record, dataIndex); // Customize render node\n\n    childNode = value;\n\n    if (render) {\n      var renderData = render(value, record, index);\n\n      if (isRenderCell(renderData)) {\n        childNode = renderData.children;\n        cellProps = renderData.props;\n      } else {\n        childNode = renderData;\n      }\n    }\n  } // Not crash if final `childNode` is not validate ReactNode\n\n\n  if (_typeof(childNode) === 'object' && !Array.isArray(childNode) && !React.isValidElement(childNode)) {\n    childNode = null;\n  }\n\n  if (ellipsis && (lastFixLeft || firstFixRight)) {\n    childNode = React.createElement(\"span\", {\n      className: \"\".concat(cellPrefixCls, \"-content\")\n    }, childNode);\n  }\n\n  var _ref2 = cellProps || {},\n      cellColSpan = _ref2.colSpan,\n      cellRowSpan = _ref2.rowSpan,\n      cellStyle = _ref2.style,\n      cellClassName = _ref2.className,\n      restCellProps = _objectWithoutProperties(_ref2, [\"colSpan\", \"rowSpan\", \"style\", \"className\"]);\n\n  var mergedColSpan = cellColSpan !== undefined ? cellColSpan : colSpan;\n  var mergedRowSpan = cellRowSpan !== undefined ? cellRowSpan : rowSpan;\n\n  if (mergedColSpan === 0 || mergedRowSpan === 0) {\n    return null;\n  } // ====================== Fixed =======================\n\n\n  var fixedStyle = {};\n  var isFixLeft = typeof fixLeft === 'number';\n  var isFixRight = typeof fixRight === 'number';\n\n  if (isFixLeft) {\n    fixedStyle.position = 'sticky';\n    fixedStyle.left = fixLeft;\n  }\n\n  if (isFixRight) {\n    fixedStyle.position = 'sticky';\n    fixedStyle.right = fixRight;\n  } // ====================== Align =======================\n\n\n  var alignStyle = {};\n\n  if (align) {\n    alignStyle.textAlign = align;\n  } // ====================== Render ======================\n\n\n  var title;\n  var ellipsisConfig = ellipsis === true ? {\n    showTitle: true\n  } : ellipsis;\n\n  if (ellipsisConfig && (ellipsisConfig.showTitle || rowType === 'header')) {\n    if (typeof childNode === 'string' || typeof childNode === 'number') {\n      title = childNode.toString();\n    } else if (React.isValidElement(childNode) && typeof childNode.props.children === 'string') {\n      title = childNode.props.children;\n    }\n  }\n\n  var componentProps = _objectSpread(_objectSpread(_objectSpread({\n    title: title\n  }, restCellProps), additionalProps), {}, {\n    colSpan: mergedColSpan && mergedColSpan !== 1 ? mergedColSpan : null,\n    rowSpan: mergedRowSpan && mergedRowSpan !== 1 ? mergedRowSpan : null,\n    className: classNames(cellPrefixCls, className, (_classNames = {}, _defineProperty(_classNames, \"\".concat(cellPrefixCls, \"-fix-left\"), isFixLeft), _defineProperty(_classNames, \"\".concat(cellPrefixCls, \"-fix-left-first\"), firstFixLeft), _defineProperty(_classNames, \"\".concat(cellPrefixCls, \"-fix-left-last\"), lastFixLeft), _defineProperty(_classNames, \"\".concat(cellPrefixCls, \"-fix-right\"), isFixRight), _defineProperty(_classNames, \"\".concat(cellPrefixCls, \"-fix-right-first\"), firstFixRight), _defineProperty(_classNames, \"\".concat(cellPrefixCls, \"-fix-right-last\"), lastFixRight), _defineProperty(_classNames, \"\".concat(cellPrefixCls, \"-ellipsis\"), ellipsis), _defineProperty(_classNames, \"\".concat(cellPrefixCls, \"-with-append\"), appendNode), _defineProperty(_classNames, \"\".concat(cellPrefixCls, \"-fix-sticky\"), (isFixLeft || isFixRight) && isSticky), _classNames), additionalProps.className, cellClassName),\n    style: _objectSpread(_objectSpread(_objectSpread(_objectSpread({}, additionalProps.style), alignStyle), fixedStyle), cellStyle),\n    ref: isRefComponent(Component) ? ref : null\n  });\n\n  return React.createElement(Component, Object.assign({}, componentProps), appendNode, childNode);\n}\n\nvar RefCell = React.forwardRef(Cell);\nRefCell.displayName = 'Cell';\nvar MemoCell = React.memo(RefCell, function (prev, next) {\n  if (next.shouldCellUpdate) {\n    return !next.shouldCellUpdate(next.record, prev.record);\n  }\n\n  return false;\n});\nexport default MemoCell;"]},"metadata":{},"sourceType":"module"}