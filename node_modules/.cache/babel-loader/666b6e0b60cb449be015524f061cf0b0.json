{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useRef, useMemo } from 'react';\nimport { useForm as useRcForm } from 'rc-field-form';\nimport scrollIntoView from 'scroll-into-view-if-needed';\nimport { toArray, getFieldId } from '../util';\n\nfunction toNamePathStr(name) {\n  var namePath = toArray(name);\n  return namePath.join('_');\n}\n\nexport default function useForm(form) {\n  var _useRcForm = useRcForm(),\n      _useRcForm2 = _slicedToArray(_useRcForm, 1),\n      rcForm = _useRcForm2[0];\n\n  var itemsRef = useRef({});\n  var wrapForm = useMemo(function () {\n    return form || _extends(_extends({}, rcForm), {\n      __INTERNAL__: {\n        itemRef: function itemRef(name) {\n          return function (node) {\n            var namePathStr = toNamePathStr(name);\n\n            if (node) {\n              itemsRef.current[namePathStr] = node;\n            } else {\n              delete itemsRef.current[namePathStr];\n            }\n          };\n        }\n      },\n      scrollToField: function scrollToField(name) {\n        var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n        var namePath = toArray(name);\n        var fieldId = getFieldId(namePath, wrapForm.__INTERNAL__.name);\n        var node = fieldId ? document.getElementById(fieldId) : null;\n\n        if (node) {\n          scrollIntoView(node, _extends({\n            scrollMode: 'if-needed',\n            block: 'nearest'\n          }, options));\n        }\n      },\n      getFieldInstance: function getFieldInstance(name) {\n        var namePathStr = toNamePathStr(name);\n        return itemsRef.current[namePathStr];\n      }\n    });\n  }, [form, rcForm]);\n  return [wrapForm];\n}","map":{"version":3,"sources":["/home/diegozago/Documents/hi-platform-test/node_modules/antd/es/form/hooks/useForm.js"],"names":["_extends","_slicedToArray","useRef","useMemo","useForm","useRcForm","scrollIntoView","toArray","getFieldId","toNamePathStr","name","namePath","join","form","_useRcForm","_useRcForm2","rcForm","itemsRef","wrapForm","__INTERNAL__","itemRef","node","namePathStr","current","scrollToField","options","arguments","length","undefined","fieldId","document","getElementById","scrollMode","block","getFieldInstance"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,gCAArB;AACA,OAAOC,cAAP,MAA2B,sCAA3B;AACA,SAASC,MAAT,EAAiBC,OAAjB,QAAgC,OAAhC;AACA,SAASC,OAAO,IAAIC,SAApB,QAAqC,eAArC;AACA,OAAOC,cAAP,MAA2B,4BAA3B;AACA,SAASC,OAAT,EAAkBC,UAAlB,QAAoC,SAApC;;AAEA,SAASC,aAAT,CAAuBC,IAAvB,EAA6B;AAC3B,MAAIC,QAAQ,GAAGJ,OAAO,CAACG,IAAD,CAAtB;AACA,SAAOC,QAAQ,CAACC,IAAT,CAAc,GAAd,CAAP;AACD;;AAED,eAAe,SAASR,OAAT,CAAiBS,IAAjB,EAAuB;AACpC,MAAIC,UAAU,GAAGT,SAAS,EAA1B;AAAA,MACIU,WAAW,GAAGd,cAAc,CAACa,UAAD,EAAa,CAAb,CADhC;AAAA,MAEIE,MAAM,GAAGD,WAAW,CAAC,CAAD,CAFxB;;AAIA,MAAIE,QAAQ,GAAGf,MAAM,CAAC,EAAD,CAArB;AACA,MAAIgB,QAAQ,GAAGf,OAAO,CAAC,YAAY;AACjC,WAAOU,IAAI,IAAIb,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAKgB,MAAL,CAAT,EAAuB;AAC5CG,MAAAA,YAAY,EAAE;AACZC,QAAAA,OAAO,EAAE,SAASA,OAAT,CAAiBV,IAAjB,EAAuB;AAC9B,iBAAO,UAAUW,IAAV,EAAgB;AACrB,gBAAIC,WAAW,GAAGb,aAAa,CAACC,IAAD,CAA/B;;AAEA,gBAAIW,IAAJ,EAAU;AACRJ,cAAAA,QAAQ,CAACM,OAAT,CAAiBD,WAAjB,IAAgCD,IAAhC;AACD,aAFD,MAEO;AACL,qBAAOJ,QAAQ,CAACM,OAAT,CAAiBD,WAAjB,CAAP;AACD;AACF,WARD;AASD;AAXW,OAD8B;AAc5CE,MAAAA,aAAa,EAAE,SAASA,aAAT,CAAuBd,IAAvB,EAA6B;AAC1C,YAAIe,OAAO,GAAGC,SAAS,CAACC,MAAV,GAAmB,CAAnB,IAAwBD,SAAS,CAAC,CAAD,CAAT,KAAiBE,SAAzC,GAAqDF,SAAS,CAAC,CAAD,CAA9D,GAAoE,EAAlF;AACA,YAAIf,QAAQ,GAAGJ,OAAO,CAACG,IAAD,CAAtB;AACA,YAAImB,OAAO,GAAGrB,UAAU,CAACG,QAAD,EAAWO,QAAQ,CAACC,YAAT,CAAsBT,IAAjC,CAAxB;AACA,YAAIW,IAAI,GAAGQ,OAAO,GAAGC,QAAQ,CAACC,cAAT,CAAwBF,OAAxB,CAAH,GAAsC,IAAxD;;AAEA,YAAIR,IAAJ,EAAU;AACRf,UAAAA,cAAc,CAACe,IAAD,EAAOrB,QAAQ,CAAC;AAC5BgC,YAAAA,UAAU,EAAE,WADgB;AAE5BC,YAAAA,KAAK,EAAE;AAFqB,WAAD,EAG1BR,OAH0B,CAAf,CAAd;AAID;AACF,OA1B2C;AA2B5CS,MAAAA,gBAAgB,EAAE,SAASA,gBAAT,CAA0BxB,IAA1B,EAAgC;AAChD,YAAIY,WAAW,GAAGb,aAAa,CAACC,IAAD,CAA/B;AACA,eAAOO,QAAQ,CAACM,OAAT,CAAiBD,WAAjB,CAAP;AACD;AA9B2C,KAAvB,CAAvB;AAgCD,GAjCqB,EAiCnB,CAACT,IAAD,EAAOG,MAAP,CAjCmB,CAAtB;AAkCA,SAAO,CAACE,QAAD,CAAP;AACD","sourcesContent":["import _extends from \"@babel/runtime/helpers/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useRef, useMemo } from 'react';\nimport { useForm as useRcForm } from 'rc-field-form';\nimport scrollIntoView from 'scroll-into-view-if-needed';\nimport { toArray, getFieldId } from '../util';\n\nfunction toNamePathStr(name) {\n  var namePath = toArray(name);\n  return namePath.join('_');\n}\n\nexport default function useForm(form) {\n  var _useRcForm = useRcForm(),\n      _useRcForm2 = _slicedToArray(_useRcForm, 1),\n      rcForm = _useRcForm2[0];\n\n  var itemsRef = useRef({});\n  var wrapForm = useMemo(function () {\n    return form || _extends(_extends({}, rcForm), {\n      __INTERNAL__: {\n        itemRef: function itemRef(name) {\n          return function (node) {\n            var namePathStr = toNamePathStr(name);\n\n            if (node) {\n              itemsRef.current[namePathStr] = node;\n            } else {\n              delete itemsRef.current[namePathStr];\n            }\n          };\n        }\n      },\n      scrollToField: function scrollToField(name) {\n        var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n        var namePath = toArray(name);\n        var fieldId = getFieldId(namePath, wrapForm.__INTERNAL__.name);\n        var node = fieldId ? document.getElementById(fieldId) : null;\n\n        if (node) {\n          scrollIntoView(node, _extends({\n            scrollMode: 'if-needed',\n            block: 'nearest'\n          }, options));\n        }\n      },\n      getFieldInstance: function getFieldInstance(name) {\n        var namePathStr = toNamePathStr(name);\n        return itemsRef.current[namePathStr];\n      }\n    });\n  }, [form, rcForm]);\n  return [wrapForm];\n}"]},"metadata":{},"sourceType":"module"}