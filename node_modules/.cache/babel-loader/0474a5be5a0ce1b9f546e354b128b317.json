{"ast":null,"code":"import tinycolor from 'tinycolor2';\nvar hueStep = 2; // 色相阶梯\n\nvar saturationStep = 0.16; // 饱和度阶梯，浅色部分\n\nvar saturationStep2 = 0.05; // 饱和度阶梯，深色部分\n\nvar brightnessStep1 = 0.05; // 亮度阶梯，浅色部分\n\nvar brightnessStep2 = 0.15; // 亮度阶梯，深色部分\n\nvar lightColorCount = 5; // 浅色数量，主色上\n\nvar darkColorCount = 4; // 深色数量，主色下\n// 暗色主题颜色映射关系表\n\nvar darkColorMap = [{\n  index: 7,\n  opacity: 0.15\n}, {\n  index: 6,\n  opacity: 0.25\n}, {\n  index: 5,\n  opacity: 0.3\n}, {\n  index: 5,\n  opacity: 0.45\n}, {\n  index: 5,\n  opacity: 0.65\n}, {\n  index: 5,\n  opacity: 0.85\n}, {\n  index: 4,\n  opacity: 0.9\n}, {\n  index: 3,\n  opacity: 0.95\n}, {\n  index: 2,\n  opacity: 0.97\n}, {\n  index: 1,\n  opacity: 0.98\n}];\n\nfunction getHue(hsv, i, light) {\n  var hue; // 根据色相不同，色相转向不同\n\n  if (Math.round(hsv.h) >= 60 && Math.round(hsv.h) <= 240) {\n    hue = light ? Math.round(hsv.h) - hueStep * i : Math.round(hsv.h) + hueStep * i;\n  } else {\n    hue = light ? Math.round(hsv.h) + hueStep * i : Math.round(hsv.h) - hueStep * i;\n  }\n\n  if (hue < 0) {\n    hue += 360;\n  } else if (hue >= 360) {\n    hue -= 360;\n  }\n\n  return hue;\n}\n\nfunction getSaturation(hsv, i, light) {\n  // grey color don't change saturation\n  if (hsv.h === 0 && hsv.s === 0) {\n    return hsv.s;\n  }\n\n  var saturation;\n\n  if (light) {\n    saturation = hsv.s - saturationStep * i;\n  } else if (i === darkColorCount) {\n    saturation = hsv.s + saturationStep;\n  } else {\n    saturation = hsv.s + saturationStep2 * i;\n  } // 边界值修正\n\n\n  if (saturation > 1) {\n    saturation = 1;\n  } // 第一格的 s 限制在 0.06-0.1 之间\n\n\n  if (light && i === lightColorCount && saturation > 0.1) {\n    saturation = 0.1;\n  }\n\n  if (saturation < 0.06) {\n    saturation = 0.06;\n  }\n\n  return Number(saturation.toFixed(2));\n}\n\nfunction getValue(hsv, i, light) {\n  var value;\n\n  if (light) {\n    value = hsv.v + brightnessStep1 * i;\n  } else {\n    value = hsv.v - brightnessStep2 * i;\n  }\n\n  if (value > 1) {\n    value = 1;\n  }\n\n  return Number(value.toFixed(2));\n}\n\nfunction generate(color) {\n  var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var patterns = [];\n  var pColor = tinycolor(color);\n\n  for (var i = lightColorCount; i > 0; i -= 1) {\n    var hsv = pColor.toHsv();\n    var colorString = tinycolor({\n      h: getHue(hsv, i, true),\n      s: getSaturation(hsv, i, true),\n      v: getValue(hsv, i, true)\n    }).toHexString();\n    patterns.push(colorString);\n  }\n\n  patterns.push(pColor.toHexString());\n\n  for (var _i = 1; _i <= darkColorCount; _i += 1) {\n    var _hsv = pColor.toHsv();\n\n    var _colorString = tinycolor({\n      h: getHue(_hsv, _i),\n      s: getSaturation(_hsv, _i),\n      v: getValue(_hsv, _i)\n    }).toHexString();\n\n    patterns.push(_colorString);\n  } // dark theme patterns\n\n\n  if (opts.theme === 'dark') {\n    return darkColorMap.map(function (_ref) {\n      var index = _ref.index,\n          opacity = _ref.opacity;\n      var darkColorString = tinycolor.mix(opts.backgroundColor || '#141414', patterns[index], opacity * 100).toHexString();\n      return darkColorString;\n    });\n  }\n\n  return patterns;\n}\n\nvar presetPrimaryColors = {\n  red: '#F5222D',\n  volcano: '#FA541C',\n  orange: '#FA8C16',\n  gold: '#FAAD14',\n  yellow: '#FADB14',\n  lime: '#A0D911',\n  green: '#52C41A',\n  cyan: '#13C2C2',\n  blue: '#1890FF',\n  geekblue: '#2F54EB',\n  purple: '#722ED1',\n  magenta: '#EB2F96',\n  grey: '#666666'\n};\nvar presetPalettes = {};\nvar presetDarkPalettes = {};\nObject.keys(presetPrimaryColors).forEach(function (key) {\n  presetPalettes[key] = generate(presetPrimaryColors[key]);\n  presetPalettes[key].primary = presetPalettes[key][5]; // dark presetPalettes\n\n  presetDarkPalettes[key] = generate(presetPrimaryColors[key], {\n    theme: 'dark',\n    backgroundColor: '#141414'\n  });\n  presetDarkPalettes[key].primary = presetDarkPalettes[key][5];\n});\nvar red = presetPalettes.red;\nvar volcano = presetPalettes.volcano;\nvar gold = presetPalettes.gold;\nvar orange = presetPalettes.orange;\nvar yellow = presetPalettes.yellow;\nvar lime = presetPalettes.lime;\nvar green = presetPalettes.green;\nvar cyan = presetPalettes.cyan;\nvar blue = presetPalettes.blue;\nvar geekblue = presetPalettes.geekblue;\nvar purple = presetPalettes.purple;\nvar magenta = presetPalettes.magenta;\nvar grey = presetPalettes.grey;\nexport { blue, cyan, geekblue, generate, gold, green, grey, lime, magenta, orange, presetDarkPalettes, presetPalettes, presetPrimaryColors, purple, red, volcano, yellow };","map":{"version":3,"sources":["/home/diegozago/Documents/hi-platform-test/node_modules/@ant-design/colors/dist/index.esm.js"],"names":["tinycolor","hueStep","saturationStep","saturationStep2","brightnessStep1","brightnessStep2","lightColorCount","darkColorCount","darkColorMap","index","opacity","getHue","hsv","i","light","hue","Math","round","h","getSaturation","s","saturation","Number","toFixed","getValue","value","v","generate","color","opts","arguments","length","undefined","patterns","pColor","toHsv","colorString","toHexString","push","_i","_hsv","_colorString","theme","map","_ref","darkColorString","mix","backgroundColor","presetPrimaryColors","red","volcano","orange","gold","yellow","lime","green","cyan","blue","geekblue","purple","magenta","grey","presetPalettes","presetDarkPalettes","Object","keys","forEach","key","primary"],"mappings":"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","sourcesContent":["import tinycolor from 'tinycolor2';\n\nvar hueStep = 2; // 色相阶梯\n\nvar saturationStep = 0.16; // 饱和度阶梯，浅色部分\n\nvar saturationStep2 = 0.05; // 饱和度阶梯，深色部分\n\nvar brightnessStep1 = 0.05; // 亮度阶梯，浅色部分\n\nvar brightnessStep2 = 0.15; // 亮度阶梯，深色部分\n\nvar lightColorCount = 5; // 浅色数量，主色上\n\nvar darkColorCount = 4; // 深色数量，主色下\n// 暗色主题颜色映射关系表\n\nvar darkColorMap = [{\n  index: 7,\n  opacity: 0.15\n}, {\n  index: 6,\n  opacity: 0.25\n}, {\n  index: 5,\n  opacity: 0.3\n}, {\n  index: 5,\n  opacity: 0.45\n}, {\n  index: 5,\n  opacity: 0.65\n}, {\n  index: 5,\n  opacity: 0.85\n}, {\n  index: 4,\n  opacity: 0.9\n}, {\n  index: 3,\n  opacity: 0.95\n}, {\n  index: 2,\n  opacity: 0.97\n}, {\n  index: 1,\n  opacity: 0.98\n}];\n\nfunction getHue(hsv, i, light) {\n  var hue; // 根据色相不同，色相转向不同\n\n  if (Math.round(hsv.h) >= 60 && Math.round(hsv.h) <= 240) {\n    hue = light ? Math.round(hsv.h) - hueStep * i : Math.round(hsv.h) + hueStep * i;\n  } else {\n    hue = light ? Math.round(hsv.h) + hueStep * i : Math.round(hsv.h) - hueStep * i;\n  }\n\n  if (hue < 0) {\n    hue += 360;\n  } else if (hue >= 360) {\n    hue -= 360;\n  }\n\n  return hue;\n}\n\nfunction getSaturation(hsv, i, light) {\n  // grey color don't change saturation\n  if (hsv.h === 0 && hsv.s === 0) {\n    return hsv.s;\n  }\n\n  var saturation;\n\n  if (light) {\n    saturation = hsv.s - saturationStep * i;\n  } else if (i === darkColorCount) {\n    saturation = hsv.s + saturationStep;\n  } else {\n    saturation = hsv.s + saturationStep2 * i;\n  } // 边界值修正\n\n\n  if (saturation > 1) {\n    saturation = 1;\n  } // 第一格的 s 限制在 0.06-0.1 之间\n\n\n  if (light && i === lightColorCount && saturation > 0.1) {\n    saturation = 0.1;\n  }\n\n  if (saturation < 0.06) {\n    saturation = 0.06;\n  }\n\n  return Number(saturation.toFixed(2));\n}\n\nfunction getValue(hsv, i, light) {\n  var value;\n\n  if (light) {\n    value = hsv.v + brightnessStep1 * i;\n  } else {\n    value = hsv.v - brightnessStep2 * i;\n  }\n\n  if (value > 1) {\n    value = 1;\n  }\n\n  return Number(value.toFixed(2));\n}\n\nfunction generate(color) {\n  var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var patterns = [];\n  var pColor = tinycolor(color);\n\n  for (var i = lightColorCount; i > 0; i -= 1) {\n    var hsv = pColor.toHsv();\n    var colorString = tinycolor({\n      h: getHue(hsv, i, true),\n      s: getSaturation(hsv, i, true),\n      v: getValue(hsv, i, true)\n    }).toHexString();\n    patterns.push(colorString);\n  }\n\n  patterns.push(pColor.toHexString());\n\n  for (var _i = 1; _i <= darkColorCount; _i += 1) {\n    var _hsv = pColor.toHsv();\n\n    var _colorString = tinycolor({\n      h: getHue(_hsv, _i),\n      s: getSaturation(_hsv, _i),\n      v: getValue(_hsv, _i)\n    }).toHexString();\n\n    patterns.push(_colorString);\n  } // dark theme patterns\n\n\n  if (opts.theme === 'dark') {\n    return darkColorMap.map(function (_ref) {\n      var index = _ref.index,\n          opacity = _ref.opacity;\n      var darkColorString = tinycolor.mix(opts.backgroundColor || '#141414', patterns[index], opacity * 100).toHexString();\n      return darkColorString;\n    });\n  }\n\n  return patterns;\n}\n\nvar presetPrimaryColors = {\n  red: '#F5222D',\n  volcano: '#FA541C',\n  orange: '#FA8C16',\n  gold: '#FAAD14',\n  yellow: '#FADB14',\n  lime: '#A0D911',\n  green: '#52C41A',\n  cyan: '#13C2C2',\n  blue: '#1890FF',\n  geekblue: '#2F54EB',\n  purple: '#722ED1',\n  magenta: '#EB2F96',\n  grey: '#666666'\n};\nvar presetPalettes = {};\nvar presetDarkPalettes = {};\nObject.keys(presetPrimaryColors).forEach(function (key) {\n  presetPalettes[key] = generate(presetPrimaryColors[key]);\n  presetPalettes[key].primary = presetPalettes[key][5]; // dark presetPalettes\n\n  presetDarkPalettes[key] = generate(presetPrimaryColors[key], {\n    theme: 'dark',\n    backgroundColor: '#141414'\n  });\n  presetDarkPalettes[key].primary = presetDarkPalettes[key][5];\n});\nvar red = presetPalettes.red;\nvar volcano = presetPalettes.volcano;\nvar gold = presetPalettes.gold;\nvar orange = presetPalettes.orange;\nvar yellow = presetPalettes.yellow;\nvar lime = presetPalettes.lime;\nvar green = presetPalettes.green;\nvar cyan = presetPalettes.cyan;\nvar blue = presetPalettes.blue;\nvar geekblue = presetPalettes.geekblue;\nvar purple = presetPalettes.purple;\nvar magenta = presetPalettes.magenta;\nvar grey = presetPalettes.grey;\n\nexport { blue, cyan, geekblue, generate, gold, green, grey, lime, magenta, orange, presetDarkPalettes, presetPalettes, presetPrimaryColors, purple, red, volcano, yellow };\n"]},"metadata":{},"sourceType":"module"}