{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport * as React from 'react';\nimport usePatchElement from '../../_util/hooks/usePatchElement';\nimport HookModal from './HookModal';\nimport { withConfirm, withInfo, withSuccess, withError, withWarn } from '../confirm';\nvar uuid = 0;\nexport default function useModal() {\n  var _usePatchElement = usePatchElement(),\n      _usePatchElement2 = _slicedToArray(_usePatchElement, 2),\n      elements = _usePatchElement2[0],\n      patchElement = _usePatchElement2[1];\n\n  function getConfirmFunc(withFunc) {\n    return function hookConfirm(config) {\n      uuid += 1;\n      var modalRef = /*#__PURE__*/React.createRef();\n      var closeFunc;\n      var modal = /*#__PURE__*/React.createElement(HookModal, {\n        key: \"modal-\".concat(uuid),\n        config: withFunc(config),\n        ref: modalRef,\n        afterClose: function afterClose() {\n          closeFunc();\n        }\n      });\n      closeFunc = patchElement(modal);\n      return {\n        destroy: function destroy() {\n          if (modalRef.current) {\n            modalRef.current.destroy();\n          }\n        },\n        update: function update(newConfig) {\n          if (modalRef.current) {\n            modalRef.current.update(newConfig);\n          }\n        }\n      };\n    };\n  }\n\n  return [{\n    info: getConfirmFunc(withInfo),\n    success: getConfirmFunc(withSuccess),\n    error: getConfirmFunc(withError),\n    warning: getConfirmFunc(withWarn),\n    confirm: getConfirmFunc(withConfirm)\n  }, /*#__PURE__*/React.createElement(React.Fragment, null, elements)];\n}","map":{"version":3,"sources":["/home/diegozago/Documents/hi-platform-test/node_modules/antd/es/modal/useModal/index.js"],"names":["_slicedToArray","React","usePatchElement","HookModal","withConfirm","withInfo","withSuccess","withError","withWarn","uuid","useModal","_usePatchElement","_usePatchElement2","elements","patchElement","getConfirmFunc","withFunc","hookConfirm","config","modalRef","createRef","closeFunc","modal","createElement","key","concat","ref","afterClose","destroy","current","update","newConfig","info","success","error","warning","confirm","Fragment"],"mappings":"AAAA,OAAOA,cAAP,MAA2B,sCAA3B;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,OAAOC,eAAP,MAA4B,mCAA5B;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,SAASC,WAAT,EAAsBC,QAAtB,EAAgCC,WAAhC,EAA6CC,SAA7C,EAAwDC,QAAxD,QAAwE,YAAxE;AACA,IAAIC,IAAI,GAAG,CAAX;AACA,eAAe,SAASC,QAAT,GAAoB;AACjC,MAAIC,gBAAgB,GAAGT,eAAe,EAAtC;AAAA,MACIU,iBAAiB,GAAGZ,cAAc,CAACW,gBAAD,EAAmB,CAAnB,CADtC;AAAA,MAEIE,QAAQ,GAAGD,iBAAiB,CAAC,CAAD,CAFhC;AAAA,MAGIE,YAAY,GAAGF,iBAAiB,CAAC,CAAD,CAHpC;;AAKA,WAASG,cAAT,CAAwBC,QAAxB,EAAkC;AAChC,WAAO,SAASC,WAAT,CAAqBC,MAArB,EAA6B;AAClCT,MAAAA,IAAI,IAAI,CAAR;AACA,UAAIU,QAAQ,GAAG,aAAalB,KAAK,CAACmB,SAAN,EAA5B;AACA,UAAIC,SAAJ;AACA,UAAIC,KAAK,GAAG,aAAarB,KAAK,CAACsB,aAAN,CAAoBpB,SAApB,EAA+B;AACtDqB,QAAAA,GAAG,EAAE,SAASC,MAAT,CAAgBhB,IAAhB,CADiD;AAEtDS,QAAAA,MAAM,EAAEF,QAAQ,CAACE,MAAD,CAFsC;AAGtDQ,QAAAA,GAAG,EAAEP,QAHiD;AAItDQ,QAAAA,UAAU,EAAE,SAASA,UAAT,GAAsB;AAChCN,UAAAA,SAAS;AACV;AANqD,OAA/B,CAAzB;AAQAA,MAAAA,SAAS,GAAGP,YAAY,CAACQ,KAAD,CAAxB;AACA,aAAO;AACLM,QAAAA,OAAO,EAAE,SAASA,OAAT,GAAmB;AAC1B,cAAIT,QAAQ,CAACU,OAAb,EAAsB;AACpBV,YAAAA,QAAQ,CAACU,OAAT,CAAiBD,OAAjB;AACD;AACF,SALI;AAMLE,QAAAA,MAAM,EAAE,SAASA,MAAT,CAAgBC,SAAhB,EAA2B;AACjC,cAAIZ,QAAQ,CAACU,OAAb,EAAsB;AACpBV,YAAAA,QAAQ,CAACU,OAAT,CAAiBC,MAAjB,CAAwBC,SAAxB;AACD;AACF;AAVI,OAAP;AAYD,KAzBD;AA0BD;;AAED,SAAO,CAAC;AACNC,IAAAA,IAAI,EAAEjB,cAAc,CAACV,QAAD,CADd;AAEN4B,IAAAA,OAAO,EAAElB,cAAc,CAACT,WAAD,CAFjB;AAGN4B,IAAAA,KAAK,EAAEnB,cAAc,CAACR,SAAD,CAHf;AAIN4B,IAAAA,OAAO,EAAEpB,cAAc,CAACP,QAAD,CAJjB;AAKN4B,IAAAA,OAAO,EAAErB,cAAc,CAACX,WAAD;AALjB,GAAD,EAMJ,aAAaH,KAAK,CAACsB,aAAN,CAAoBtB,KAAK,CAACoC,QAA1B,EAAoC,IAApC,EAA0CxB,QAA1C,CANT,CAAP;AAOD","sourcesContent":["import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport * as React from 'react';\nimport usePatchElement from '../../_util/hooks/usePatchElement';\nimport HookModal from './HookModal';\nimport { withConfirm, withInfo, withSuccess, withError, withWarn } from '../confirm';\nvar uuid = 0;\nexport default function useModal() {\n  var _usePatchElement = usePatchElement(),\n      _usePatchElement2 = _slicedToArray(_usePatchElement, 2),\n      elements = _usePatchElement2[0],\n      patchElement = _usePatchElement2[1];\n\n  function getConfirmFunc(withFunc) {\n    return function hookConfirm(config) {\n      uuid += 1;\n      var modalRef = /*#__PURE__*/React.createRef();\n      var closeFunc;\n      var modal = /*#__PURE__*/React.createElement(HookModal, {\n        key: \"modal-\".concat(uuid),\n        config: withFunc(config),\n        ref: modalRef,\n        afterClose: function afterClose() {\n          closeFunc();\n        }\n      });\n      closeFunc = patchElement(modal);\n      return {\n        destroy: function destroy() {\n          if (modalRef.current) {\n            modalRef.current.destroy();\n          }\n        },\n        update: function update(newConfig) {\n          if (modalRef.current) {\n            modalRef.current.update(newConfig);\n          }\n        }\n      };\n    };\n  }\n\n  return [{\n    info: getConfirmFunc(withInfo),\n    success: getConfirmFunc(withSuccess),\n    error: getConfirmFunc(withError),\n    warning: getConfirmFunc(withWarn),\n    confirm: getConfirmFunc(withConfirm)\n  }, /*#__PURE__*/React.createElement(React.Fragment, null, elements)];\n}"]},"metadata":{},"sourceType":"module"}