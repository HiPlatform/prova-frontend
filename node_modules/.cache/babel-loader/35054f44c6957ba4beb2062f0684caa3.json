{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _createSuper from \"@babel/runtime/helpers/createSuper\";\nimport * as React from 'react';\nimport devWarning from '../_util/devWarning';\nimport { changeConfirmLocale } from '../modal/locale';\nimport LocaleContext from './context';\nexport var ANT_MARK = 'internalMark';\n\nvar LocaleProvider = /*#__PURE__*/function (_React$Component) {\n  _inherits(LocaleProvider, _React$Component);\n\n  var _super = _createSuper(LocaleProvider);\n\n  function LocaleProvider(props) {\n    var _this;\n\n    _classCallCheck(this, LocaleProvider);\n\n    _this = _super.call(this, props);\n    changeConfirmLocale(props.locale && props.locale.Modal);\n    devWarning(props._ANT_MARK__ === ANT_MARK, 'LocaleProvider', '`LocaleProvider` is deprecated. Please use `locale` with `ConfigProvider` instead: http://u.ant.design/locale');\n    return _this;\n  }\n\n  _createClass(LocaleProvider, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var locale = this.props.locale;\n\n      if (prevProps.locale !== locale) {\n        changeConfirmLocale(locale && locale.Modal);\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      changeConfirmLocale();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          locale = _this$props.locale,\n          children = _this$props.children;\n      return /*#__PURE__*/React.createElement(LocaleContext.Provider, {\n        value: _extends(_extends({}, locale), {\n          exist: true\n        })\n      }, children);\n    }\n  }]);\n\n  return LocaleProvider;\n}(React.Component);\n\nexport { LocaleProvider as default };\nLocaleProvider.defaultProps = {\n  locale: {}\n};","map":{"version":3,"sources":["/home/diegozago/Documents/hi-platform-test/node_modules/antd/es/locale-provider/index.js"],"names":["_extends","_classCallCheck","_createClass","_inherits","_createSuper","React","devWarning","changeConfirmLocale","LocaleContext","ANT_MARK","LocaleProvider","_React$Component","_super","props","_this","call","locale","Modal","_ANT_MARK__","key","value","componentDidUpdate","prevProps","componentWillUnmount","render","_this$props","children","createElement","Provider","exist","Component","default","defaultProps"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,gCAArB;AACA,OAAOC,eAAP,MAA4B,uCAA5B;AACA,OAAOC,YAAP,MAAyB,oCAAzB;AACA,OAAOC,SAAP,MAAsB,iCAAtB;AACA,OAAOC,YAAP,MAAyB,oCAAzB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,OAAOC,UAAP,MAAuB,qBAAvB;AACA,SAASC,mBAAT,QAAoC,iBAApC;AACA,OAAOC,aAAP,MAA0B,WAA1B;AACA,OAAO,IAAIC,QAAQ,GAAG,cAAf;;AAEP,IAAIC,cAAc,GAAG,aAAa,UAAUC,gBAAV,EAA4B;AAC5DR,EAAAA,SAAS,CAACO,cAAD,EAAiBC,gBAAjB,CAAT;;AAEA,MAAIC,MAAM,GAAGR,YAAY,CAACM,cAAD,CAAzB;;AAEA,WAASA,cAAT,CAAwBG,KAAxB,EAA+B;AAC7B,QAAIC,KAAJ;;AAEAb,IAAAA,eAAe,CAAC,IAAD,EAAOS,cAAP,CAAf;;AAEAI,IAAAA,KAAK,GAAGF,MAAM,CAACG,IAAP,CAAY,IAAZ,EAAkBF,KAAlB,CAAR;AACAN,IAAAA,mBAAmB,CAACM,KAAK,CAACG,MAAN,IAAgBH,KAAK,CAACG,MAAN,CAAaC,KAA9B,CAAnB;AACAX,IAAAA,UAAU,CAACO,KAAK,CAACK,WAAN,KAAsBT,QAAvB,EAAiC,gBAAjC,EAAmD,+GAAnD,CAAV;AACA,WAAOK,KAAP;AACD;;AAEDZ,EAAAA,YAAY,CAACQ,cAAD,EAAiB,CAAC;AAC5BS,IAAAA,GAAG,EAAE,oBADuB;AAE5BC,IAAAA,KAAK,EAAE,SAASC,kBAAT,CAA4BC,SAA5B,EAAuC;AAC5C,UAAIN,MAAM,GAAG,KAAKH,KAAL,CAAWG,MAAxB;;AAEA,UAAIM,SAAS,CAACN,MAAV,KAAqBA,MAAzB,EAAiC;AAC/BT,QAAAA,mBAAmB,CAACS,MAAM,IAAIA,MAAM,CAACC,KAAlB,CAAnB;AACD;AACF;AAR2B,GAAD,EAS1B;AACDE,IAAAA,GAAG,EAAE,sBADJ;AAEDC,IAAAA,KAAK,EAAE,SAASG,oBAAT,GAAgC;AACrChB,MAAAA,mBAAmB;AACpB;AAJA,GAT0B,EAc1B;AACDY,IAAAA,GAAG,EAAE,QADJ;AAEDC,IAAAA,KAAK,EAAE,SAASI,MAAT,GAAkB;AACvB,UAAIC,WAAW,GAAG,KAAKZ,KAAvB;AAAA,UACIG,MAAM,GAAGS,WAAW,CAACT,MADzB;AAAA,UAEIU,QAAQ,GAAGD,WAAW,CAACC,QAF3B;AAGA,aAAO,aAAarB,KAAK,CAACsB,aAAN,CAAoBnB,aAAa,CAACoB,QAAlC,EAA4C;AAC9DR,QAAAA,KAAK,EAAEpB,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAKgB,MAAL,CAAT,EAAuB;AACpCa,UAAAA,KAAK,EAAE;AAD6B,SAAvB;AAD+C,OAA5C,EAIjBH,QAJiB,CAApB;AAKD;AAXA,GAd0B,CAAjB,CAAZ;;AA4BA,SAAOhB,cAAP;AACD,CA7CiC,CA6ChCL,KAAK,CAACyB,SA7C0B,CAAlC;;AA+CA,SAASpB,cAAc,IAAIqB,OAA3B;AACArB,cAAc,CAACsB,YAAf,GAA8B;AAC5BhB,EAAAA,MAAM,EAAE;AADoB,CAA9B","sourcesContent":["import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _createSuper from \"@babel/runtime/helpers/createSuper\";\nimport * as React from 'react';\nimport devWarning from '../_util/devWarning';\nimport { changeConfirmLocale } from '../modal/locale';\nimport LocaleContext from './context';\nexport var ANT_MARK = 'internalMark';\n\nvar LocaleProvider = /*#__PURE__*/function (_React$Component) {\n  _inherits(LocaleProvider, _React$Component);\n\n  var _super = _createSuper(LocaleProvider);\n\n  function LocaleProvider(props) {\n    var _this;\n\n    _classCallCheck(this, LocaleProvider);\n\n    _this = _super.call(this, props);\n    changeConfirmLocale(props.locale && props.locale.Modal);\n    devWarning(props._ANT_MARK__ === ANT_MARK, 'LocaleProvider', '`LocaleProvider` is deprecated. Please use `locale` with `ConfigProvider` instead: http://u.ant.design/locale');\n    return _this;\n  }\n\n  _createClass(LocaleProvider, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var locale = this.props.locale;\n\n      if (prevProps.locale !== locale) {\n        changeConfirmLocale(locale && locale.Modal);\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      changeConfirmLocale();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          locale = _this$props.locale,\n          children = _this$props.children;\n      return /*#__PURE__*/React.createElement(LocaleContext.Provider, {\n        value: _extends(_extends({}, locale), {\n          exist: true\n        })\n      }, children);\n    }\n  }]);\n\n  return LocaleProvider;\n}(React.Component);\n\nexport { LocaleProvider as default };\nLocaleProvider.defaultProps = {\n  locale: {}\n};"]},"metadata":{},"sourceType":"module"}