{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport RCNotification from 'rc-notification';\nimport LoadingOutlined from '@ant-design/icons/LoadingOutlined';\nimport ExclamationCircleFilled from '@ant-design/icons/ExclamationCircleFilled';\nimport CloseCircleFilled from '@ant-design/icons/CloseCircleFilled';\nimport CheckCircleFilled from '@ant-design/icons/CheckCircleFilled';\nimport InfoCircleFilled from '@ant-design/icons/InfoCircleFilled';\nimport createUseMessage from './hooks/useMessage';\nvar messageInstance;\nvar defaultDuration = 3;\nvar defaultTop;\nvar key = 1;\nvar localPrefixCls = 'ant-message';\nvar transitionName = 'move-up';\nvar getContainer;\nvar maxCount;\nvar rtl = false;\nexport function getKeyThenIncreaseKey() {\n  return key++;\n}\n\nfunction setMessageConfig(options) {\n  if (options.top !== undefined) {\n    defaultTop = options.top;\n    messageInstance = null; // delete messageInstance for new defaultTop\n  }\n\n  if (options.duration !== undefined) {\n    defaultDuration = options.duration;\n  }\n\n  if (options.prefixCls !== undefined) {\n    localPrefixCls = options.prefixCls;\n  }\n\n  if (options.getContainer !== undefined) {\n    getContainer = options.getContainer;\n  }\n\n  if (options.transitionName !== undefined) {\n    transitionName = options.transitionName;\n    messageInstance = null; // delete messageInstance for new transitionName\n  }\n\n  if (options.maxCount !== undefined) {\n    maxCount = options.maxCount;\n    messageInstance = null;\n  }\n\n  if (options.rtl !== undefined) {\n    rtl = options.rtl;\n  }\n}\n\nfunction getRCNotificationInstance(args, callback) {\n  var prefixCls = args.prefixCls || localPrefixCls;\n\n  if (messageInstance) {\n    callback({\n      prefixCls: prefixCls,\n      instance: messageInstance\n    });\n    return;\n  }\n\n  RCNotification.newInstance({\n    prefixCls: prefixCls,\n    transitionName: transitionName,\n    style: {\n      top: defaultTop\n    },\n    getContainer: getContainer,\n    maxCount: maxCount\n  }, function (instance) {\n    if (messageInstance) {\n      callback({\n        prefixCls: prefixCls,\n        instance: messageInstance\n      });\n      return;\n    }\n\n    messageInstance = instance;\n    callback({\n      prefixCls: prefixCls,\n      instance: instance\n    });\n  });\n}\n\nvar typeToIcon = {\n  info: InfoCircleFilled,\n  success: CheckCircleFilled,\n  error: CloseCircleFilled,\n  warning: ExclamationCircleFilled,\n  loading: LoadingOutlined\n};\n\nfunction getRCNoticeProps(args, prefixCls) {\n  var _classNames;\n\n  var duration = args.duration !== undefined ? args.duration : defaultDuration;\n  var IconComponent = typeToIcon[args.type];\n  var messageClass = classNames(\"\".concat(prefixCls, \"-custom-content\"), (_classNames = {}, _defineProperty(_classNames, \"\".concat(prefixCls, \"-\").concat(args.type), args.type), _defineProperty(_classNames, \"\".concat(prefixCls, \"-rtl\"), rtl === true), _classNames));\n  return {\n    key: args.key,\n    duration: duration,\n    style: args.style || {},\n    className: args.className,\n    content: /*#__PURE__*/React.createElement(\"div\", {\n      className: messageClass\n    }, args.icon || IconComponent && /*#__PURE__*/React.createElement(IconComponent, null), /*#__PURE__*/React.createElement(\"span\", null, args.content)),\n    onClose: args.onClose\n  };\n}\n\nfunction notice(args) {\n  var target = args.key || key++;\n  var closePromise = new Promise(function (resolve) {\n    var callback = function callback() {\n      if (typeof args.onClose === 'function') {\n        args.onClose();\n      }\n\n      return resolve(true);\n    };\n\n    getRCNotificationInstance(args, function (_ref) {\n      var prefixCls = _ref.prefixCls,\n          instance = _ref.instance;\n      instance.notice(getRCNoticeProps(_extends(_extends({}, args), {\n        key: target,\n        onClose: callback\n      }), prefixCls));\n    });\n  });\n\n  var result = function result() {\n    if (messageInstance) {\n      messageInstance.removeNotice(target);\n    }\n  };\n\n  result.then = function (filled, rejected) {\n    return closePromise.then(filled, rejected);\n  };\n\n  result.promise = closePromise;\n  return result;\n}\n\nfunction isArgsProps(content) {\n  return Object.prototype.toString.call(content) === '[object Object]' && !!content.content;\n}\n\nvar api = {\n  open: notice,\n  config: setMessageConfig,\n  destroy: function destroy(messageKey) {\n    if (messageInstance) {\n      if (messageKey) {\n        var _messageInstance = messageInstance,\n            removeNotice = _messageInstance.removeNotice;\n        removeNotice(messageKey);\n      } else {\n        var _messageInstance2 = messageInstance,\n            destroy = _messageInstance2.destroy;\n        destroy();\n        messageInstance = null;\n      }\n    }\n  }\n};\nexport function attachTypeApi(originalApi, type) {\n  originalApi[type] = function (content, duration, onClose) {\n    if (isArgsProps(content)) {\n      return originalApi.open(_extends(_extends({}, content), {\n        type: type\n      }));\n    }\n\n    if (typeof duration === 'function') {\n      onClose = duration;\n      duration = undefined;\n    }\n\n    return originalApi.open({\n      content: content,\n      duration: duration,\n      type: type,\n      onClose: onClose\n    });\n  };\n}\n['success', 'info', 'warning', 'error', 'loading'].forEach(function (type) {\n  return attachTypeApi(api, type);\n});\napi.warn = api.warning;\napi.useMessage = createUseMessage(getRCNotificationInstance, getRCNoticeProps);\nexport default api;","map":{"version":3,"sources":["/home/diegozago/Documents/hi-platform-test/node_modules/antd/es/message/index.js"],"names":["_extends","_defineProperty","React","classNames","RCNotification","LoadingOutlined","ExclamationCircleFilled","CloseCircleFilled","CheckCircleFilled","InfoCircleFilled","createUseMessage","messageInstance","defaultDuration","defaultTop","key","localPrefixCls","transitionName","getContainer","maxCount","rtl","getKeyThenIncreaseKey","setMessageConfig","options","top","undefined","duration","prefixCls","getRCNotificationInstance","args","callback","instance","newInstance","style","typeToIcon","info","success","error","warning","loading","getRCNoticeProps","_classNames","IconComponent","type","messageClass","concat","className","content","createElement","icon","onClose","notice","target","closePromise","Promise","resolve","_ref","result","removeNotice","then","filled","rejected","promise","isArgsProps","Object","prototype","toString","call","api","open","config","destroy","messageKey","_messageInstance","_messageInstance2","attachTypeApi","originalApi","forEach","warn","useMessage"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport RCNotification from 'rc-notification';\nimport LoadingOutlined from '@ant-design/icons/LoadingOutlined';\nimport ExclamationCircleFilled from '@ant-design/icons/ExclamationCircleFilled';\nimport CloseCircleFilled from '@ant-design/icons/CloseCircleFilled';\nimport CheckCircleFilled from '@ant-design/icons/CheckCircleFilled';\nimport InfoCircleFilled from '@ant-design/icons/InfoCircleFilled';\nimport createUseMessage from './hooks/useMessage';\nvar messageInstance;\nvar defaultDuration = 3;\nvar defaultTop;\nvar key = 1;\nvar localPrefixCls = 'ant-message';\nvar transitionName = 'move-up';\nvar getContainer;\nvar maxCount;\nvar rtl = false;\nexport function getKeyThenIncreaseKey() {\n  return key++;\n}\n\nfunction setMessageConfig(options) {\n  if (options.top !== undefined) {\n    defaultTop = options.top;\n    messageInstance = null; // delete messageInstance for new defaultTop\n  }\n\n  if (options.duration !== undefined) {\n    defaultDuration = options.duration;\n  }\n\n  if (options.prefixCls !== undefined) {\n    localPrefixCls = options.prefixCls;\n  }\n\n  if (options.getContainer !== undefined) {\n    getContainer = options.getContainer;\n  }\n\n  if (options.transitionName !== undefined) {\n    transitionName = options.transitionName;\n    messageInstance = null; // delete messageInstance for new transitionName\n  }\n\n  if (options.maxCount !== undefined) {\n    maxCount = options.maxCount;\n    messageInstance = null;\n  }\n\n  if (options.rtl !== undefined) {\n    rtl = options.rtl;\n  }\n}\n\nfunction getRCNotificationInstance(args, callback) {\n  var prefixCls = args.prefixCls || localPrefixCls;\n\n  if (messageInstance) {\n    callback({\n      prefixCls: prefixCls,\n      instance: messageInstance\n    });\n    return;\n  }\n\n  RCNotification.newInstance({\n    prefixCls: prefixCls,\n    transitionName: transitionName,\n    style: {\n      top: defaultTop\n    },\n    getContainer: getContainer,\n    maxCount: maxCount\n  }, function (instance) {\n    if (messageInstance) {\n      callback({\n        prefixCls: prefixCls,\n        instance: messageInstance\n      });\n      return;\n    }\n\n    messageInstance = instance;\n    callback({\n      prefixCls: prefixCls,\n      instance: instance\n    });\n  });\n}\n\nvar typeToIcon = {\n  info: InfoCircleFilled,\n  success: CheckCircleFilled,\n  error: CloseCircleFilled,\n  warning: ExclamationCircleFilled,\n  loading: LoadingOutlined\n};\n\nfunction getRCNoticeProps(args, prefixCls) {\n  var _classNames;\n\n  var duration = args.duration !== undefined ? args.duration : defaultDuration;\n  var IconComponent = typeToIcon[args.type];\n  var messageClass = classNames(\"\".concat(prefixCls, \"-custom-content\"), (_classNames = {}, _defineProperty(_classNames, \"\".concat(prefixCls, \"-\").concat(args.type), args.type), _defineProperty(_classNames, \"\".concat(prefixCls, \"-rtl\"), rtl === true), _classNames));\n  return {\n    key: args.key,\n    duration: duration,\n    style: args.style || {},\n    className: args.className,\n    content: /*#__PURE__*/React.createElement(\"div\", {\n      className: messageClass\n    }, args.icon || IconComponent && /*#__PURE__*/React.createElement(IconComponent, null), /*#__PURE__*/React.createElement(\"span\", null, args.content)),\n    onClose: args.onClose\n  };\n}\n\nfunction notice(args) {\n  var target = args.key || key++;\n  var closePromise = new Promise(function (resolve) {\n    var callback = function callback() {\n      if (typeof args.onClose === 'function') {\n        args.onClose();\n      }\n\n      return resolve(true);\n    };\n\n    getRCNotificationInstance(args, function (_ref) {\n      var prefixCls = _ref.prefixCls,\n          instance = _ref.instance;\n      instance.notice(getRCNoticeProps(_extends(_extends({}, args), {\n        key: target,\n        onClose: callback\n      }), prefixCls));\n    });\n  });\n\n  var result = function result() {\n    if (messageInstance) {\n      messageInstance.removeNotice(target);\n    }\n  };\n\n  result.then = function (filled, rejected) {\n    return closePromise.then(filled, rejected);\n  };\n\n  result.promise = closePromise;\n  return result;\n}\n\nfunction isArgsProps(content) {\n  return Object.prototype.toString.call(content) === '[object Object]' && !!content.content;\n}\n\nvar api = {\n  open: notice,\n  config: setMessageConfig,\n  destroy: function destroy(messageKey) {\n    if (messageInstance) {\n      if (messageKey) {\n        var _messageInstance = messageInstance,\n            removeNotice = _messageInstance.removeNotice;\n        removeNotice(messageKey);\n      } else {\n        var _messageInstance2 = messageInstance,\n            destroy = _messageInstance2.destroy;\n        destroy();\n        messageInstance = null;\n      }\n    }\n  }\n};\nexport function attachTypeApi(originalApi, type) {\n  originalApi[type] = function (content, duration, onClose) {\n    if (isArgsProps(content)) {\n      return originalApi.open(_extends(_extends({}, content), {\n        type: type\n      }));\n    }\n\n    if (typeof duration === 'function') {\n      onClose = duration;\n      duration = undefined;\n    }\n\n    return originalApi.open({\n      content: content,\n      duration: duration,\n      type: type,\n      onClose: onClose\n    });\n  };\n}\n['success', 'info', 'warning', 'error', 'loading'].forEach(function (type) {\n  return attachTypeApi(api, type);\n});\napi.warn = api.warning;\napi.useMessage = createUseMessage(getRCNotificationInstance, getRCNoticeProps);\nexport default api;"]},"metadata":{},"sourceType":"module"}